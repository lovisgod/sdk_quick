apply plugin: 'com.android.library'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply plugin: 'realm-android'

apply plugin: 'realm-android'

apply plugin: 'androidx.navigation.safeargs.kotlin'

apply plugin: 'com.getkeepsafe.dexcount'


ext {
    artifact = 'smart-pos-core' // This artifact name should be the same with library module name
}

android {

    compileSdkVersion targetSdk

    defaultConfig {
        minSdkVersion minSdk
        targetSdkVersion targetSdk
        versionCode versionCode
        versionName versionName
        vectorDrawables.useSupportLibrary = true

        testInstrumentationRunner "com.interswitchng.smartpos.MockTestRunner"
        testInstrumentationRunnerArguments(shouldMock: 'true')
        buildConfigField("String", "ISW_EMAIL_API_KEY", emailApiKey)
        buildConfigField("String", "REALM_KEY", realmKey)
        buildConfigField("String", "ISW_DEFAULT_PIN", defaultPin)
        buildConfigField("int", "ISW_TERMINAL_PORT", "5043")
        buildConfigField("String", "ISW_KIMONO_KEY_URL", "\"http://172.35.15.76:7075/kmw/kimonoservice\"")

    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    buildTypes {
        release {
            minifyEnabled minified
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main.res.srcDirs = [
                'src/main/res',
                'src/main/res-public'
        ]
    }

    compileOptions {
        targetCompatibility javaVersion
        sourceCompatibility javaVersion
    }


    testOptions {
        execution 'ANDROIDX_TEST_ORCHESTRATOR'
        animationsDisabled true
        unitTests {
            includeAndroidResources = true
            returnDefaultValues = true
        }
    }

    resourcePrefix 'isw_'

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation "androidx.navigation:navigation-fragment-ktx:2.1.0"
    implementation "androidx.navigation:navigation-ui-ktx:2.1.0"
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.2.0-alpha02'


    implementation "org.koin:koin-core:$koin_version"
    implementation "org.koin:koin-android-viewmodel:$koin_version"

    implementation 'com.tapadoo.android:alerter:3.0.0'
    implementation "com.google.zxing:core:$zxing_version"
    implementation "com.igweze.ebi:simple-call-adapter:1.0.1"

    // kotlin optional lib
    implementation "com.gojuno.koptional:koptional:$koptional_version"

    // retrofit http library
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-scalars:$retrofit_version"

    implementation 'com.squareup.okhttp3:logging-interceptor:3.8.0'
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.+"
    // retrofit gson converter
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
//    // xml converter
//    implementation ('com.thoughtworks.xstream:xstream:1.4.11') {
//        exclude group: 'xmlpull', module: 'xmlpull'
//        exclude group: 'org.xmlpull.v1.XmlPullParserException'
//    }
    // picasso image library
    implementation('com.squareup.picasso:picasso:2.71828') {
        exclude group: "com.android.support"
    }


    // kotlin coroutine libs
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutine_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine_version"

    // architecture lifecycle components
    implementation 'androidx.lifecycle:lifecycle-runtime:2.1.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.1.0'

    // architecture paging
    implementation 'androidx.paging:paging-runtime:2.1.0'

    // realm monarch pagging library
    implementation 'com.github.Zhuinden:realm-monarchy:0.5.1'

    implementation("com.journeyapps:zxing-android-embedded:$zxing_version") {
        exclude group: "com.android.support"
    }

    // retrofit xml converter
    implementation('com.squareup.retrofit2:converter-simplexml:2.0.0-beta3') {
        exclude group: 'stax', module: 'stax-api'
        exclude group: 'stax', module: 'stax'
    }

    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.android.support:support-v4:28.0.0'
    testImplementation 'junit:junit:4.12'
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockito_version"
    testImplementation "org.robolectric:robolectric:4.0.2"
    testImplementation "org.koin:koin-test:$koin_version"
    testImplementation "androidx.test:core:$androidx_version"
    testImplementation "com.squareup.okhttp3:mockwebserver:$okhttp_version"
    testImplementation "net.jodah:concurrentunit:$concurrent_version"
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'
    androidTestUtil 'androidx.test:orchestrator:1.2.0'

    kaptAndroidTest "androidx.databinding:databinding-compiler:3.5.0"

    implementation 'com.pixplicity.easyprefs:library:1.9.0'
    implementation 'com.airbnb.android:lottie:3.6.1'
    implementation 'com.github.javadev:underscore:1.64'


}

// maven-installer
apply from: maven_installer
// bintray
apply from: bintray_installer
